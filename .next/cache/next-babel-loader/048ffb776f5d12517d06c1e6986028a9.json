{"ast":null,"code":"import mongoose from 'mongoose';\nconst {\n  String,\n  Number,\n  ObjectId\n} = mongoose.Schema.Types;\nconst MatchSchema = new mongoose.Schema({\n  _id: ObjectId,\n  wrestler: {\n    type: String,\n    required: true\n  },\n  opponent: {\n    type: String,\n    required: true\n  },\n  result: {\n    type: String,\n    required: true,\n    enum: ['W', 'L']\n  },\n  pointsFor: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  pointsAgainst: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  takedowns: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  escapes: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  NF2: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  NF3: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  NF4: {\n    type: Number,\n    required: true,\n    default: 0\n  },\n  fall: {\n    type: Boolean,\n    required: true\n  },\n  time: {\n    type: String,\n    required: true,\n    default: \"0:00\"\n  }\n});\nexport default mongoose.models.Product || mongoose.model('Match', MatchSchema);","map":{"version":3,"sources":["/home/papaspotts/git/scorebook-hackathon/models/Match.js"],"names":["mongoose","String","Number","ObjectId","Schema","Types","MatchSchema","_id","wrestler","type","required","opponent","result","enum","pointsFor","default","pointsAgainst","takedowns","escapes","NF2","NF3","NF4","fall","Boolean","time","models","Product","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,MAAM;AAACC,EAAAA,MAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,IAA6BH,QAAQ,CAACI,MAAT,CAAgBC,KAAnD;AAEA,MAAMC,WAAW,GAAG,IAAIN,QAAQ,CAACI,MAAb,CAAoB;AACpCG,EAAAA,GAAG,EAAEJ,QAD+B;AAEpCK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAER,MADA;AAENS,IAAAA,QAAQ,EAAE;AAFJ,GAF0B;AAMpCC,EAAAA,QAAQ,EAAE;AACNF,IAAAA,IAAI,EAAER,MADA;AAENS,IAAAA,QAAQ,EAAE;AAFJ,GAN0B;AAUpCE,EAAAA,MAAM,EAAE;AACJH,IAAAA,IAAI,EAAER,MADF;AAEJS,IAAAA,QAAQ,EAAE,IAFN;AAGJG,IAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN;AAHF,GAV4B;AAepCC,EAAAA,SAAS,EAAE;AACPL,IAAAA,IAAI,EAAEP,MADC;AAEPQ,IAAAA,QAAQ,EAAE,IAFH;AAGPK,IAAAA,OAAO,EAAE;AAHF,GAfyB;AAoBpCC,EAAAA,aAAa,EAAE;AACXP,IAAAA,IAAI,EAAEP,MADK;AAEXQ,IAAAA,QAAQ,EAAE,IAFC;AAGXK,IAAAA,OAAO,EAAE;AAHE,GApBqB;AAyBpCE,EAAAA,SAAS,EAAE;AACPR,IAAAA,IAAI,EAAEP,MADC;AAEPQ,IAAAA,QAAQ,EAAE,IAFH;AAGPK,IAAAA,OAAO,EAAE;AAHF,GAzByB;AA8BpCG,EAAAA,OAAO,EAAE;AACLT,IAAAA,IAAI,EAAEP,MADD;AAELQ,IAAAA,QAAQ,EAAE,IAFL;AAGLK,IAAAA,OAAO,EAAE;AAHJ,GA9B2B;AAmCpCI,EAAAA,GAAG,EAAE;AACDV,IAAAA,IAAI,EAAEP,MADL;AAEDQ,IAAAA,QAAQ,EAAE,IAFT;AAGDK,IAAAA,OAAO,EAAE;AAHR,GAnC+B;AAwCpCK,EAAAA,GAAG,EAAE;AACDX,IAAAA,IAAI,EAAEP,MADL;AAEDQ,IAAAA,QAAQ,EAAE,IAFT;AAGDK,IAAAA,OAAO,EAAE;AAHR,GAxC+B;AA6CpCM,EAAAA,GAAG,EAAE;AACDZ,IAAAA,IAAI,EAAEP,MADL;AAEDQ,IAAAA,QAAQ,EAAE,IAFT;AAGDK,IAAAA,OAAO,EAAE;AAHR,GA7C+B;AAkDpCO,EAAAA,IAAI,EAAE;AACFb,IAAAA,IAAI,EAAEc,OADJ;AAEFb,IAAAA,QAAQ,EAAE;AAFR,GAlD8B;AAsDpCc,EAAAA,IAAI,EAAE;AACFf,IAAAA,IAAI,EAAER,MADJ;AAEFS,IAAAA,QAAQ,EAAE,IAFR;AAGFK,IAAAA,OAAO,EAAE;AAHP;AAtD8B,CAApB,CAApB;AA6DA,eAAef,QAAQ,CAACyB,MAAT,CAAgBC,OAAhB,IAA2B1B,QAAQ,CAAC2B,KAAT,CAAe,OAAf,EAAwBrB,WAAxB,CAA1C","sourcesContent":["import mongoose from 'mongoose';\nconst {String, Number, ObjectId} = mongoose.Schema.Types;\n\nconst MatchSchema = new mongoose.Schema({\n    _id: ObjectId,\n    wrestler: {\n        type: String,\n        required: true\n    },\n    opponent: {\n        type: String,\n        required: true\n    },\n    result: {\n        type: String,\n        required: true,\n        enum: ['W', 'L']\n    },\n    pointsFor: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    pointsAgainst: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    takedowns: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    escapes: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    NF2: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    NF3: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    NF4: {\n        type: Number,\n        required: true,\n        default: 0\n    },\n    fall: {\n        type: Boolean,\n        required: true,\n    },\n    time: {\n        type: String,\n        required: true,\n        default: \"0:00\"\n    },\n})\n\nexport default mongoose.models.Product || mongoose.model('Match', MatchSchema);"]},"metadata":{},"sourceType":"module"}