{"ast":null,"code":"var _jsxFileName = \"/home/papaspotts/git/scorebook-hackathon/components/Index/MatchList.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Card } from 'semantic-ui-react';\n\nfunction MatchList(_ref) {\n  var Matches = _ref.Matches;\n\n  function mapMatchesToItems(Matches) {\n    return Matches.map(function (Match) {\n      return {\n        header: Match.name,\n        image: Match.mediaUrl,\n        meta: \"$\".concat(Match.price),\n        color: 'teal',\n        fluid: true,\n        childKey: Match._id,\n        href: \"/Match?_id=\".concat(Match._id)\n      };\n    });\n  }\n\n  return __jsx(Card.Group, {\n    itemsPerRow: \"3\",\n    centered: true,\n    stackable: true,\n    items: mapMatchesToItems(Matches),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 10\n    }\n  });\n}\n\n_c = MatchList;\nexport default MatchList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatchList\");","map":{"version":3,"sources":["/home/papaspotts/git/scorebook-hackathon/components/Index/MatchList.js"],"names":["Card","MatchList","Matches","mapMatchesToItems","map","Match","header","name","image","mediaUrl","meta","price","color","fluid","childKey","_id","href"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,mBAAnB;;AAEA,SAASC,SAAT,OAA8B;AAAA,MAAVC,OAAU,QAAVA,OAAU;;AAC5B,WAASC,iBAAT,CAA2BD,OAA3B,EAAmC;AAEjC,WAAOA,OAAO,CAACE,GAAR,CAAY,UAAAC,KAAK;AAAA,aAAK;AAC3BC,QAAAA,MAAM,EAAED,KAAK,CAACE,IADa;AAE3BC,QAAAA,KAAK,EAAEH,KAAK,CAACI,QAFc;AAG3BC,QAAAA,IAAI,aAAML,KAAK,CAACM,KAAZ,CAHuB;AAI3BC,QAAAA,KAAK,EAAE,MAJoB;AAK3BC,QAAAA,KAAK,EAAE,IALoB;AAM3BC,QAAAA,QAAQ,EAAET,KAAK,CAACU,GANW;AAO3BC,QAAAA,IAAI,uBAAgBX,KAAK,CAACU,GAAtB;AAPuB,OAAL;AAAA,KAAjB,CAAP;AASD;;AAED,SAAO,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAC,GAAxB;AAA4B,IAAA,QAAQ,MAApC;AAAqC,IAAA,SAAS,MAA9C;AAA+C,IAAA,KAAK,EAAEZ,iBAAiB,CAACD,OAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;KAfQD,S;AAiBT,eAAeA,SAAf","sourcesContent":["import {Card} from 'semantic-ui-react';\n\nfunction MatchList({Matches}) {\n  function mapMatchesToItems(Matches){\n\n    return Matches.map(Match => ({\n      header: Match.name,\n      image: Match.mediaUrl,\n      meta: `$${Match.price}`,\n      color: 'teal',\n      fluid: true,\n      childKey: Match._id,\n      href: `/Match?_id=${Match._id}`\n    }))\n  }\n\n  return <Card.Group itemsPerRow=\"3\" centered stackable items={mapMatchesToItems(Matches)}/>;\n}\n\nexport default MatchList;\n"]},"metadata":{},"sourceType":"module"}