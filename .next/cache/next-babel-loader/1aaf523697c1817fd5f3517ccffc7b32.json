{"ast":null,"code":"var _jsxFileName = \"/home/papaspotts/git/scorebook-hackathon/pages/match.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport axios from 'axios';\nimport MatchSummary from '../components/Match/MatchSummary';\nimport MatchAttributes from '../components/Match/MatchAttributes';\nimport baseUrl from '../utils/baseUrl';\n\nfunction Match({\n  match\n}) {\n  return __jsx(React.Fragment, null, __jsx(MatchSummary, _extends({}, match, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  })), __jsx(MatchAttributes, _extends({}, match, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  })));\n}\n\nMatch.getInitialProps = async ({\n  query: {\n    _id\n  }\n}) => {\n  //fetch data on server\n  // return response data as an object\n  const url = `${baseUrl}/api/match`;\n  const payload = {\n    params: {\n      _id\n    }\n  };\n  const response = await axios.get(url, payload);\n  return {\n    match: response.data\n  }; //note:  this object will be merged with existing props\n};\n\nexport default Match;","map":{"version":3,"sources":["/home/papaspotts/git/scorebook-hackathon/pages/match.js"],"names":["axios","MatchSummary","MatchAttributes","baseUrl","Match","match","getInitialProps","query","_id","url","payload","params","response","get","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,SAASC,KAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA0B;AACxB,SAAQ,4BACN,MAAC,YAAD,eAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADM,EAEN,MAAC,eAAD,eAAqBA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFM,CAAR;AAKD;;AAEDD,KAAK,CAACE,eAAN,GAAwB,OAAO;AAACC,EAAAA,KAAK,EAAE;AAACC,IAAAA;AAAD;AAAR,CAAP,KAAyB;AAC/C;AACA;AACA,QAAMC,GAAG,GAAI,GAAEN,OAAQ,YAAvB;AACA,QAAMO,OAAO,GAAG;AAACC,IAAAA,MAAM,EAAE;AAACH,MAAAA;AAAD;AAAT,GAAhB;AACA,QAAMI,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUJ,GAAV,EAAeC,OAAf,CAAvB;AACA,SAAO;AAACL,IAAAA,KAAK,EAAEO,QAAQ,CAACE;AAAjB,GAAP,CAN+C,CAO/C;AACD,CARD;;AASA,eAAeV,KAAf","sourcesContent":["import axios from 'axios';\nimport MatchSummary from '../components/Match/MatchSummary';\nimport MatchAttributes from '../components/Match/MatchAttributes';\nimport baseUrl from '../utils/baseUrl';\n\nfunction Match( {match }) {\n  return (<>\n    <MatchSummary {...match} />\n    <MatchAttributes {...match} />\n  </>\n  )\n}\n\nMatch.getInitialProps = async ({query: {_id}}) =>{\n  //fetch data on server\n  // return response data as an object\n  const url = `${baseUrl}/api/match`;\n  const payload = {params: {_id}};\n  const response = await axios.get(url, payload);\n  return {match: response.data};\n  //note:  this object will be merged with existing props\n};\nexport default Match;\n"]},"metadata":{},"sourceType":"module"}